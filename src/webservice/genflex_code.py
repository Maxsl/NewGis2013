# -*- coding:utf-8 -*-#生成常用codeimport sys,os,os.path,time,struct,traceback,threading,datetimedef make_flexcode():	import amfgateway	f = open('flex_codes.as','w')	f.write('''<fx:Declarations>			<s:ChannelSet id="channels">							<s:AMFChannel id="pyamf" uri="http://localhost:8521/gateway/" />						</s:ChannelSet>				<s:RemoteObject id="server" channelSet="{channels}" destination="admin" showBusyCursor="true">			''')	entries = amfgateway.services	for k,v in entries.items():		name = k.split('.')[-1]		f.write('''\t\t\t<s:method name="%s" result="%s_result(event)" fault="onfault(event)"/>\n'''%(name,name))				f.write('''\t\t</s:RemoteObject>		</fx:Declarations>\n''')	f.write('''	<fx:Script>			<![CDATA[								import com.sw2us.newgis.*;								import mx.collections.ArrayCollection;				import mx.controls.Alert;				import mx.events.CloseEvent;				import mx.events.ListEvent;				import mx.graphics.Stroke;				import mx.managers.PopUpManager;				import mx.rpc.events.FaultEvent;				import mx.rpc.events.ResultEvent;								private function onfault(event:FaultEvent):void{					Alert.show(event.fault.faultDetail);				}									private function init():void{					pyamf.uri = AppCore.instance().getAmfServerUrl();				}			''')				for k,v in entries.items():		name = k.split('.')[-1]		f.write('''				private function %s_result(event:ResultEvent):void{					var cr:Object = event.result;					if(cr.succ == false){						Alert.show(cr.msg);						return;					}					dgDevices.dataProvider = new ArrayCollection( cr.result); 				}\n'''%(name,))					f.write('''		]]>		</fx:Script>''')			f.close()	def make_flexcode2(names):	import string 		names = names.replace("'",'')	names = names.replace('"','')		items = map(string.strip,names.strip().split(','))	names = map(lambda x:x.split(':')[0],items)	names = filter(lambda x: x!='',names)		f = open('flex_codes.as','w')	f.write('''<fx:Declarations>			<s:ChannelSet id="channels">							<s:AMFChannel id="pyamf" uri="http://localhost:8521/gateway/" />						</s:ChannelSet>				<s:RemoteObject id="server" channelSet="{channels}" destination="admin" showBusyCursor="true">			''')		for k in names:		name = k.split('.')[-1]		f.write('''\t\t\t<s:method name="%s" result="%s_result(event)" fault="onfault(event)"/>\n'''%(name,name))				f.write('''\t\t</s:RemoteObject>		</fx:Declarations>\n''')	f.write('''	<fx:Script>			<![CDATA[								import com.sw2us.newgis.*;								import mx.collections.ArrayCollection;				import mx.controls.Alert;				import mx.events.CloseEvent;				import mx.events.ListEvent;				import mx.graphics.Stroke;				import mx.managers.PopUpManager;				import mx.rpc.events.FaultEvent;				import mx.rpc.events.ResultEvent;								private function onfault(event:FaultEvent):void{					Alert.show(event.fault.faultDetail,"错误");				}									private function init():void{					pyamf.uri = AppCore.instance().getAmfServerUrl();				}			''')				for k in names:		name = k.split('.')[-1]		f.write('''				private function %s_result(event:ResultEvent):void{					var cr:Object = event.result;					if(cr.succ == false){						Alert.show(cr.msg,"提示");						return;					}					dgDevices.dataProvider = new ArrayCollection( cr.result); 				}\n'''%(name,))					f.write('''		]]>		</fx:Script>''')			f.close()		calls=''''gis.getAoReport_AlarmActions':s.getAoReport_AlarmActions,    'gis.getAoReport_AlarmLogs':s.getAoReport_AlarmLogs,'''if __name__=='__main__':	make_flexcode2(calls)																
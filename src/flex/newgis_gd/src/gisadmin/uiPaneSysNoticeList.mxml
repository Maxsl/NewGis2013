<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="428" xmlns:ui="com.sw2us.newgis.ui.*"
		 creationComplete="init()">
	<s:layout>
		<s:VerticalLayout gap="2"/>
	</s:layout>
	<fx:Declarations>
		<s:ChannelSet id="channels">			
			<s:AMFChannel id="pyamf" uri="http://localhost:8521/gateway/" />			
		</s:ChannelSet>
		<s:RemoteObject id="server" channelSet="{channels}" destination="admin" showBusyCursor="true">
			<s:method name="getNoticeList" result="getNoticeList_result(event)" fault="onfault(event)"/>
			<s:method name="createNoticeItem" result="createNoticeItem_result(event)" fault="onfault(event)"/>
			<s:method name="updateNoticeItem" result="updateNoticeItem_result(event)" fault="onfault(event)"/>
			<s:method name="deleteNoticeItem" result="deleteNoticeItem_result(event)" fault="onfault(event)"/>			
		</s:RemoteObject>
	</fx:Declarations>
	
	
	<fx:Script>
		<![CDATA[
			import com.sw2us.newgis.*;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.ListEvent;
			import mx.graphics.Stroke;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			
			
			
			private function onfault(event:FaultEvent):void{
				Alert.show(event.fault.faultDetail);
			}	
			
			private function init():void{
				pyamf.uri = AppCore.instance().getAmfServerUrl();
			}
			
			private function getNoticeList_result(event:ResultEvent):void{
				var cr:Object = event.result;
				if(cr.succ == false){
					Alert.show(cr.msg);
					return;
				}
				dg.dataProvider = new ArrayCollection( cr.result); 
			}
			
			private function createNoticeItem_result(event:ResultEvent):void{
				var cr:Object = event.result;
				if(cr.succ == false){
					Alert.show(cr.msg);
					return;
				}
				Alert.show("公告创建成功!","提示");
				onSearch(); 
			}
			
			private function updateNoticeItem_result(event:ResultEvent):void{
				var cr:Object = event.result;
				if(cr.succ == false){
					Alert.show(cr.msg);
					return;
				}
				Alert.show("记录更新成功!","提示");
				onSearch(); 
			}
			
			private function deleteNoticeItem_result(event:ResultEvent):void{
				var cr:Object = event.result;
				if(cr.succ == false){
					Alert.show(cr.msg);
					return;
				}
				Alert.show("删除成功!","提示");
				onSearch();
			}
			
			protected function dg_changeHandler(event:ListEvent):void
			{
				if( dg.selectedItem == null){
					return;
				}
				this.edtTitle.text = dg.selectedItem.topic;
				this.edtContent.text = dg.selectedItem.content;
				
			}
			
			private function onSearch():void{				
				server.getNoticeList(this.dtFilter.getValue().start,dtFilter.getValue().end);
			}
			
			
			protected function btnSearch_clickHandler(event:MouseEvent):void
			{
				onSearch();
			}
			
			private function onalert_del(event:CloseEvent):void{
				if( event.detail == Alert.YES){
					server.deleteNoticeItem(this.dg.selectedItem.id);
				}
			}
			
			protected function btnDelete_clickHandler(event:MouseEvent):void
			{
				if( dg.selectedItem == null){
					return ;
				}
				Alert.show("是否真的要删除?","警告",Alert.YES | Alert.CANCEL,this,onalert_del);				
			}


			protected function btnNew_clickHandler(event:MouseEvent):void
			{
				dg.selectedIndex = -1;
				this.edtTitle.text="";
				this.edtContent.text="";
			}


			protected function btnSave_clickHandler(event:MouseEvent):void
			{
				var d:Object = new Object();
				d.content = this.edtContent.text;
				d.topic = this.edtTitle.text;
				if(dg.selectedItem == null){
					server.createNoticeItem(d);
					return;
				}
				d.id = dg.selectedItem.id;
				server.updateNoticeItem(d);
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:HGroup width="100%" height="30" color="#C0B5B5" verticalAlign="middle">
		<ui:uiSearcher4 width="259" id="dtFilter"/>
		<s:Button label="检索" id="btnSearch" click="btnSearch_clickHandler(event)"/>
		<s:Button label="删除" id="btnDelete" click="btnDelete_clickHandler(event)"/>
	</s:HGroup>
	<mx:DataGrid width="100%" height="100%" id="dg" change="dg_changeHandler(event)" horizontalGridLines="true" horizontalScrollPolicy="auto">
		<mx:columns>
			<mx:DataGridColumn headerText="编号" dataField="idx" width="40"/>
			<mx:DataGridColumn headerText="时间" dataField="time_s"/>
			<mx:DataGridColumn headerText="主题" dataField="topic"/>
			<mx:DataGridColumn dataField="content" headerText="内容"/>
			<mx:DataGridColumn/>
		</mx:columns>
	</mx:DataGrid>
	<s:Panel width="100%" height="260" title="留言内容">
		<s:layout>
			<s:BasicLayout/>
		</s:layout>
		<mx:TabNavigator y="0" height="100%" paddingTop="2" creationPolicy="all" right="10" left="103">
			<s:NavigatorContent label="公告内容" width="100%" height="100%">
				<s:layout>
					<s:BasicLayout/>
				</s:layout>
				<s:Label x="10" y="21" text="主题"/>
				<s:TextInput y="14" fontSize="14" id="edtTitle" right="10" left="44"/>
				<s:Label x="12" y="68" text="内容"/>
				<s:TextArea y="43" height="148" fontSize="14" id="edtContent" right="10" left="44"/>
			</s:NavigatorContent>
		</mx:TabNavigator>
		<s:Button x="25" y="34" label="新公告" id="btnNew" click="btnNew_clickHandler(event)"/>
		<s:Button x="25" y="59" label="保存" id="btnSave" click="btnSave_clickHandler(event)"/>
	</s:Panel>
</s:Group>
